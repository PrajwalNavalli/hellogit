---
- name: Install tomcat 10 on centos
  hosts: all
  become: yes
  vars:
    java_package_name: java-11-openjdk-devel
    user_name: tomcat
    group_name: tomcat
    user_home: /opt/tomcat
    user_shell: /bin/false
    tomcat_version: "tomcat-9.0.27"
    tomcat_major_version: "10"
    tomcat_service_name: tomcat.service
  tasks:
    - name: java installation
      ansible.builtin.yum:
        name: "{{ java_package_name }}"
        update_cache: yes
        state: present
    - name: create a tomcat group
      ansible.builtin.group:
        name: "{{ group_name }}"
        state: present
    - name: create a tomcat user
      ansible.builtin.user:
        name: "{{ user_name }}"
        create_home: yes
        group: "{{ group_name }}"
        home: "{{ user_home }}"
        shell: "{{ user_shell }}"
        state: present
    - name: extract tomcat
      ansible.builtin.unarchive:
        src: https://www-eu.apache.org/dist/tomcat/tomcat-9/v9.0.27/bin/apache-tomcat-9.0.27.tar.gz
        remote_src: yes
        dest: "{{ user_home }}"
    - name: create a symbolic link
      ansible.builtin.file:
        src: "{{ user_home }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ user_home }}/latest"
        state: link
    - name: change permissions
      ansible.builtin.file:
        dest: "{{ user_home }}"
        recurse: true
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        state: directory
    #- name: add execute permissions to shell files
     # ansible.builtin.command: "sudo sh -c 'chmod +x {{ user_home }}/latest/bin/*.sh'"
    - name: find all shell files in binaries
      ansible.builtin.find:
        path: "/opt/tomcat/latest"
        pattern: "*.sh"
      register: shfiles
    - set_fact:
        shexecutables: "{{ shfiles.files | map(attribute='path') | list }}"
    - name: change permission of shell files
      ansible.builtin.file:
        path: "{{ item }}"
        mode: 0751
      with_items: "{{ shexecutables }}"
    - name: Create a systemd unit file in centos
      ansible.builtin.copy:
        src: centos.tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
      when: ansible_facts['distribution'] == "CentOS"
    - name: Create a systemd unit file in ubuntu
      ansible.builtin.copy:
        src: ubuntu.tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
      when: ansible_facts['distribution'] == "Ubuntu"
    - name: Create a systemd unit file
      ansible.builtin.copy:
        src: tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: reload daemon and start tomcat
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        daemon_reload: yes
        enabled: yes
        state: started
    - name: copy the users xml
      ansible.builtin.copy:
        src: users.xml
        dest: "{{ user_home }}/latest/conf/tomcat-users.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: copy the manager app context file
      ansible.builtin.copy:
        src: context.xml
        dest: "{{ user_home }}/latest/webapps/manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: copy the host manager app context file
      ansible.builtin.copy:
        src: hostmanager-context.xml
        dest: "{{ user_home }}/latest/webapps/host-manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: restart tomcat
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        state: restarted
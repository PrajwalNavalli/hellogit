---
- name: Install tomcat 10 on ubuntu 22
  hosts: appservers
  become: yes
  tasks:
    - name: java installation
      ansible.builtin.package:
        name: "{{ java_package_name }}"
        state: present
    - name: create a tomcat group
      ansible.builtin.group:
        name: "{{ group_name }}"
        state: present
    - name: create a tomcat user
      ansible.builtin.user:
        name: "{{ user_name }}"
        create_home: yes
        group: "{{ group_name }}"
        home: "{{ user_home }}"
        shell: "{{ user_shell }}"
        state: present
    - name: get tomcat stats
      ansible.builtin.stat:
        path: "{{ user_home }}/latest/bin/startup.sh"
      register: tomcat_startup
    - name: extract tomcat
      ansible.builtin.unarchive:
        src: "https://www-eu.apache.org/dist/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        remote_src: yes
        dest: "{{ user_home }}"
      when: not tomcat_startup.stat.exists
    - name: create a symbolic link
      ansible.builtin.file:
        src: "{{ user_home }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ user_home }}/latest"
        state: link
      notify:
        - change permissions
        - add execute permissions to shell files
    - name: Create a systemd unit file in centos
      ansible.builtin.copy:
        src: centos.tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
      when: ansible_facts['distribution'] == "CentOS"
      notify:
        - enable and reload tomcat
    - name: Create a systemd unit file in ubuntu
      ansible.builtin.copy:
        src: ubuntu.tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
      when: ansible_facts['distribution'] == "Ubuntu"
      notify:
        - enable and reload tomcat
    - name: copy the users xml
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: "{{ user_home }}/latest/conf/tomcat-users.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
      notify:
        - restart tomcat
    - name: copy the manager app context file
      ansible.builtin.copy:
        src: context.xml
        dest: "{{ user_home }}/latest/webapps/manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
      notify:
        - restart tomcat
    - name: copy the host manager app context file
      ansible.builtin.copy:
        src: context.xml
        dest: "{{ user_home }}/latest/webapps/host-manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
      notify:
        - restart tomcat
    - name: ensure tomcat is running
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        state: started
  handlers:
    - name: restart tomcat
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        state: restarted
    - name: enable and reload tomcat
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        state: restarted
    - name: add execute permissions to shell files
      ansible.builtin.command: "sudo sh -c 'chmod +x {{ user_home }}/latest/bin/*.sh'"
    - name: change permissions
      ansible.builtin.file:
        dest: "{{ user_home }}"
        recurse: true
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        state: directory